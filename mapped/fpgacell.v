/* Generated by Yosys 0.46 (git sha1 e97731b9dda91fa5fa53ed87df7c34163ba59a41, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3) */

(* dynports =  1  *)
(* hdlname = "CB" *)
(* src = "source/CB.sv:2.1-116.10" *)
module \$paramod$11da903c679ddc23dc10e745519a255ce657bf38\CB (clk, en, nrst, sb_busA, sb_busB, config_en, config_data_inA, config_data_inB, le_outA, le_outB, config_data_outA, config_data_outB, le_inA, le_inB);
  (* src = "source/CB.sv:30.18-30.33" *)
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  (* src = "source/CB.sv:7.15-7.18" *)
  input clk;
  wire clk;
  (* src = "source/CB.sv:24.64-24.76" *)
  reg [19:0] config_dataA;
  (* src = "source/CB.sv:25.64-25.76" *)
  reg [19:0] config_dataB;
  (* src = "source/CB.sv:11.15-11.30" *)
  input config_data_inA;
  wire config_data_inA;
  (* src = "source/CB.sv:11.32-11.47" *)
  input config_data_inB;
  wire config_data_inB;
  (* src = "source/CB.sv:13.16-13.32" *)
  output config_data_outA;
  wire config_data_outA;
  (* src = "source/CB.sv:13.34-13.50" *)
  output config_data_outB;
  wire config_data_outB;
  (* src = "source/CB.sv:10.15-10.24" *)
  input config_en;
  wire config_en;
  (* src = "source/CB.sv:43.24-43.39" *)
  wire [3:0] \config_mux_selA[0] ;
  (* src = "source/CB.sv:43.24-43.39" *)
  wire [3:0] \config_mux_selA[1] ;
  (* src = "source/CB.sv:43.24-43.39" *)
  wire [3:0] \config_mux_selA[2] ;
  (* src = "source/CB.sv:43.24-43.39" *)
  wire [3:0] \config_mux_selA[3] ;
  (* src = "source/CB.sv:43.24-43.39" *)
  wire [3:0] \config_mux_selA[4] ;
  (* src = "source/CB.sv:43.57-43.72" *)
  wire [3:0] \config_mux_selB[0] ;
  (* src = "source/CB.sv:43.57-43.72" *)
  wire [3:0] \config_mux_selB[1] ;
  (* src = "source/CB.sv:43.57-43.72" *)
  wire [3:0] \config_mux_selB[2] ;
  (* src = "source/CB.sv:43.57-43.72" *)
  wire [3:0] \config_mux_selB[3] ;
  (* src = "source/CB.sv:43.57-43.72" *)
  wire [3:0] \config_mux_selB[4] ;
  (* src = "source/CB.sv:7.20-7.22" *)
  input en;
  wire en;
  (* src = "source/CB.sv:14.34-14.40" *)
  output [3:0] le_inA;
  wire [3:0] le_inA;
  (* src = "source/CB.sv:14.42-14.48" *)
  output [3:0] le_inB;
  wire [3:0] le_inB;
  (* src = "source/CB.sv:44.32-44.38" *)
  wire [1:0] le_out;
  (* src = "source/CB.sv:12.34-12.41" *)
  input le_outA;
  wire le_outA;
  (* src = "source/CB.sv:12.43-12.50" *)
  input le_outB;
  wire le_outB;
  (* src = "source/CB.sv:45.31-45.37" *)
  wire [7:0] le_sel;
  (* src = "source/CB.sv:7.24-7.28" *)
  input nrst;
  wire nrst;
  (* src = "source/CB.sv:106.27-106.31" *)
  wire [3:0] \output_mux[0].selA ;
  (* src = "source/CB.sv:107.27-107.31" *)
  wire [3:0] \output_mux[0].selB ;
  (* src = "source/CB.sv:61.27-61.34" *)
  wire [15:0] sb_bus1;
  (* src = "source/CB.sv:62.27-62.34" *)
  wire [15:0] sb_bus2;
  (* src = "source/CB.sv:8.26-8.33" *)
  inout [7:0] sb_busA;
  wire [7:0] sb_busA;
  (* src = "source/CB.sv:9.26-9.33" *)
  inout [7:0] sb_busB;
  wire [7:0] sb_busB;
  assign _000_ = config_en & en;
  assign _010_ = le_outA & ~(config_dataA[3]);
  assign _011_ = config_dataA[1] | ~(config_dataA[0]);
  assign _012_ = config_dataA[3] & ~(config_dataA[2]);
  assign _013_ = _012_ & ~(_011_);
  assign _014_ = _013_ | _010_;
  assign _015_ = config_dataA[1] | config_dataA[0];
  assign _016_ = _012_ & ~(_015_);
  assign le_inA[0] = _014_ & ~(_016_);
  assign _017_ = le_outB & ~(config_dataB[3]);
  assign _018_ = config_dataB[1] | ~(config_dataB[0]);
  assign _019_ = config_dataB[3] & ~(config_dataB[2]);
  assign _020_ = _019_ & ~(_018_);
  assign _021_ = _020_ | _017_;
  assign _022_ = config_dataB[1] | config_dataB[0];
  assign _023_ = _019_ & ~(_022_);
  assign le_inB[0] = _021_ & ~(_023_);
  assign _024_ = le_outA & ~(config_dataA[7]);
  assign _025_ = config_dataA[5] | ~(config_dataA[4]);
  assign _026_ = config_dataA[7] & ~(config_dataA[6]);
  assign _027_ = _026_ & ~(_025_);
  assign _028_ = _027_ | _024_;
  assign _029_ = config_dataA[5] | config_dataA[4];
  assign _030_ = _026_ & ~(_029_);
  assign le_inA[1] = _028_ & ~(_030_);
  assign _031_ = le_outB & ~(config_dataB[7]);
  assign _032_ = config_dataB[5] | ~(config_dataB[4]);
  assign _033_ = config_dataB[7] & ~(config_dataB[6]);
  assign _034_ = _033_ & ~(_032_);
  assign _035_ = _034_ | _031_;
  assign _036_ = config_dataB[5] | config_dataB[4];
  assign _037_ = _033_ & ~(_036_);
  assign le_inB[1] = _035_ & ~(_037_);
  assign _038_ = le_outA & ~(config_dataA[11]);
  assign _039_ = config_dataA[9] | ~(config_dataA[8]);
  assign _040_ = config_dataA[11] & ~(config_dataA[10]);
  assign _041_ = _040_ & ~(_039_);
  assign _042_ = _041_ | _038_;
  assign _043_ = config_dataA[9] | config_dataA[8];
  assign _044_ = _040_ & ~(_043_);
  assign le_inA[2] = _042_ & ~(_044_);
  assign _045_ = le_outB & ~(config_dataB[11]);
  assign _046_ = config_dataB[9] | ~(config_dataB[8]);
  assign _047_ = config_dataB[11] & ~(config_dataB[10]);
  assign _048_ = _047_ & ~(_046_);
  assign _049_ = _048_ | _045_;
  assign _050_ = config_dataB[9] | config_dataB[8];
  assign _051_ = _047_ & ~(_050_);
  assign le_inB[2] = _049_ & ~(_051_);
  assign _052_ = le_outA & ~(config_dataA[15]);
  assign _053_ = config_dataA[13] | ~(config_dataA[12]);
  assign _054_ = config_dataA[15] & ~(config_dataA[14]);
  assign _055_ = _054_ & ~(_053_);
  assign _056_ = _055_ | _052_;
  assign _001_ = config_dataA[13] | config_dataA[12];
  assign _002_ = _054_ & ~(_001_);
  assign le_inA[3] = _056_ & ~(_002_);
  assign _003_ = le_outB & ~(config_dataB[15]);
  assign _004_ = config_dataB[13] | ~(config_dataB[12]);
  assign _005_ = config_dataB[15] & ~(config_dataB[14]);
  assign _006_ = _005_ & ~(_004_);
  assign _007_ = _006_ | _003_;
  assign _008_ = config_dataB[13] | config_dataB[12];
  assign _009_ = _005_ & ~(_008_);
  assign le_inB[3] = _007_ & ~(_009_);
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[0] <= 1'h1;
    else if (_000_) config_dataA[0] <= config_data_inA;
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[1] <= 1'h1;
    else if (_000_) config_dataA[1] <= config_dataA[0];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[2] <= 1'h1;
    else if (_000_) config_dataA[2] <= config_dataA[1];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[3] <= 1'h1;
    else if (_000_) config_dataA[3] <= config_dataA[2];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[4] <= 1'h1;
    else if (_000_) config_dataA[4] <= config_dataA[3];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[5] <= 1'h1;
    else if (_000_) config_dataA[5] <= config_dataA[4];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[6] <= 1'h1;
    else if (_000_) config_dataA[6] <= config_dataA[5];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[7] <= 1'h1;
    else if (_000_) config_dataA[7] <= config_dataA[6];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[8] <= 1'h1;
    else if (_000_) config_dataA[8] <= config_dataA[7];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[9] <= 1'h1;
    else if (_000_) config_dataA[9] <= config_dataA[8];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[10] <= 1'h1;
    else if (_000_) config_dataA[10] <= config_dataA[9];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[11] <= 1'h1;
    else if (_000_) config_dataA[11] <= config_dataA[10];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[12] <= 1'h1;
    else if (_000_) config_dataA[12] <= config_dataA[11];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[13] <= 1'h1;
    else if (_000_) config_dataA[13] <= config_dataA[12];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[14] <= 1'h1;
    else if (_000_) config_dataA[14] <= config_dataA[13];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[15] <= 1'h1;
    else if (_000_) config_dataA[15] <= config_dataA[14];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[16] <= 1'h1;
    else if (_000_) config_dataA[16] <= config_dataA[15];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[17] <= 1'h1;
    else if (_000_) config_dataA[17] <= config_dataA[16];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[18] <= 1'h1;
    else if (_000_) config_dataA[18] <= config_dataA[17];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataA[19] <= 1'h1;
    else if (_000_) config_dataA[19] <= config_dataA[18];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[0] <= 1'h1;
    else if (_000_) config_dataB[0] <= config_data_inB;
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[1] <= 1'h1;
    else if (_000_) config_dataB[1] <= config_dataB[0];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[2] <= 1'h1;
    else if (_000_) config_dataB[2] <= config_dataB[1];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[3] <= 1'h1;
    else if (_000_) config_dataB[3] <= config_dataB[2];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[4] <= 1'h1;
    else if (_000_) config_dataB[4] <= config_dataB[3];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[5] <= 1'h1;
    else if (_000_) config_dataB[5] <= config_dataB[4];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[6] <= 1'h1;
    else if (_000_) config_dataB[6] <= config_dataB[5];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[7] <= 1'h1;
    else if (_000_) config_dataB[7] <= config_dataB[6];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[8] <= 1'h1;
    else if (_000_) config_dataB[8] <= config_dataB[7];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[9] <= 1'h1;
    else if (_000_) config_dataB[9] <= config_dataB[8];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[10] <= 1'h1;
    else if (_000_) config_dataB[10] <= config_dataB[9];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[11] <= 1'h1;
    else if (_000_) config_dataB[11] <= config_dataB[10];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[12] <= 1'h1;
    else if (_000_) config_dataB[12] <= config_dataB[11];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[13] <= 1'h1;
    else if (_000_) config_dataB[13] <= config_dataB[12];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[14] <= 1'h1;
    else if (_000_) config_dataB[14] <= config_dataB[13];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[15] <= 1'h1;
    else if (_000_) config_dataB[15] <= config_dataB[14];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[16] <= 1'h1;
    else if (_000_) config_dataB[16] <= config_dataB[15];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[17] <= 1'h1;
    else if (_000_) config_dataB[17] <= config_dataB[16];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[18] <= 1'h1;
    else if (_000_) config_dataB[18] <= config_dataB[17];
  (* \always_ff  = 32'd1 *)
  (* src = "source/CB.sv:26.3-34.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_dataB[19] <= 1'h1;
    else if (_000_) config_dataB[19] <= config_dataB[18];
  assign config_data_outA = config_dataA[19];
  assign config_data_outB = config_dataB[19];
  assign \config_mux_selA[0]  = config_dataA[3:0];
  assign \config_mux_selA[1]  = config_dataA[7:4];
  assign \config_mux_selA[2]  = config_dataA[11:8];
  assign \config_mux_selA[3]  = config_dataA[15:12];
  assign \config_mux_selA[4]  = config_dataA[19:16];
  assign \config_mux_selB[0]  = config_dataB[3:0];
  assign \config_mux_selB[1]  = config_dataB[7:4];
  assign \config_mux_selB[2]  = config_dataB[11:8];
  assign \config_mux_selB[3]  = config_dataB[15:12];
  assign \config_mux_selB[4]  = config_dataB[19:16];
  assign le_out = { le_outB, le_outA };
  assign le_sel = { le_inB[3], le_inA[3], le_inB[2], le_inA[2], le_inB[1], le_inA[1], le_inB[0], le_inA[0] };
  assign \output_mux[0].selA  = config_dataA[19:16];
  assign \output_mux[0].selB  = config_dataB[19:16];
  assign sb_bus1 = { le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA };
  assign sb_bus2 = { le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA };
  assign sb_busA = { le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA };
  assign sb_busB = { le_outB, le_outA, le_outB, le_outA, le_outB, le_outA, le_outB, le_outA };
endmodule

(* dynports =  1  *)
(* hdlname = "LE" *)
(* src = "source/LE.sv:2.1-57.10" *)
module \$paramod\LE\LUT_SIZE=s32'00000000000000000000000000010000 (clk, en, nrst, le_clk, le_en, le_nrst, select, config_data_in, config_en, config_data_out, le_out);
  (* src = "source/LE.sv:27.16-27.31" *)
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  (* src = "source/LE.sv:6.15-6.18" *)
  input clk;
  wire clk;
  (* src = "source/LE.sv:23.30-23.41" *)
  reg [16:0] config_data;
  (* src = "source/LE.sv:10.15-10.29" *)
  input config_data_in;
  wire config_data_in;
  (* src = "source/LE.sv:11.16-11.31" *)
  output config_data_out;
  wire config_data_out;
  (* src = "source/LE.sv:10.31-10.40" *)
  input config_en;
  wire config_en;
  (* src = "source/LE.sv:35.7-35.14" *)
  reg dff_out;
  (* src = "source/LE.sv:6.20-6.22" *)
  input en;
  wire en;
  (* src = "source/LE.sv:7.15-7.21" *)
  input le_clk;
  wire le_clk;
  (* src = "source/LE.sv:7.23-7.28" *)
  input le_en;
  wire le_en;
  (* src = "source/LE.sv:7.30-7.37" *)
  input le_nrst;
  wire le_nrst;
  (* src = "source/LE.sv:12.16-12.22" *)
  output le_out;
  wire le_out;
  (* src = "source/LE.sv:53.7-53.11" *)
  wire mode;
  (* src = "source/LE.sv:48.23-48.31" *)
  wire [15:0] mux_data;
  (* src = "source/LE.sv:47.7-47.14" *)
  wire mux_out;
  (* src = "source/LE.sv:6.24-6.28" *)
  input nrst;
  wire nrst;
  (* src = "source/LE.sv:8.40-8.46" *)
  input [3:0] select;
  wire [3:0] select;
  assign _00_ = config_en & en;
  assign _01_ = select[0] ? config_data[1] : config_data[0];
  assign _02_ = select[0] ? config_data[3] : config_data[2];
  assign _03_ = select[1] ? _02_ : _01_;
  assign _04_ = select[0] ? config_data[5] : config_data[4];
  assign _05_ = select[0] ? config_data[7] : config_data[6];
  assign _06_ = select[1] ? _05_ : _04_;
  assign _07_ = select[2] ? _06_ : _03_;
  assign _08_ = select[0] ? config_data[9] : config_data[8];
  assign _09_ = select[0] ? config_data[11] : config_data[10];
  assign _10_ = select[1] ? _09_ : _08_;
  assign _11_ = select[0] ? config_data[13] : config_data[12];
  assign _12_ = select[0] ? config_data[15] : config_data[14];
  assign _13_ = select[1] ? _12_ : _11_;
  assign _14_ = select[2] ? _13_ : _10_;
  assign mux_out = select[3] ? _14_ : _07_;
  assign le_out = config_data[16] ? dff_out : mux_out;
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[0] <= 1'h0;
    else if (_00_) config_data[0] <= config_data_in;
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[1] <= 1'h0;
    else if (_00_) config_data[1] <= config_data[0];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[2] <= 1'h0;
    else if (_00_) config_data[2] <= config_data[1];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[3] <= 1'h0;
    else if (_00_) config_data[3] <= config_data[2];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[4] <= 1'h0;
    else if (_00_) config_data[4] <= config_data[3];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[5] <= 1'h0;
    else if (_00_) config_data[5] <= config_data[4];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[6] <= 1'h0;
    else if (_00_) config_data[6] <= config_data[5];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[7] <= 1'h0;
    else if (_00_) config_data[7] <= config_data[6];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[8] <= 1'h0;
    else if (_00_) config_data[8] <= config_data[7];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[9] <= 1'h0;
    else if (_00_) config_data[9] <= config_data[8];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[10] <= 1'h0;
    else if (_00_) config_data[10] <= config_data[9];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[11] <= 1'h0;
    else if (_00_) config_data[11] <= config_data[10];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[12] <= 1'h0;
    else if (_00_) config_data[12] <= config_data[11];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[13] <= 1'h0;
    else if (_00_) config_data[13] <= config_data[12];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[14] <= 1'h0;
    else if (_00_) config_data[14] <= config_data[13];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[15] <= 1'h0;
    else if (_00_) config_data[15] <= config_data[14];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:24.1-30.4" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) config_data[16] <= 1'h0;
    else if (_00_) config_data[16] <= config_data[15];
  (* \always_ff  = 32'd1 *)
  (* src = "source/LE.sv:36.1-44.4" *)
  always @(posedge le_clk, negedge le_nrst)
    if (!le_nrst) dff_out <= 1'h0;
    else if (le_en) dff_out <= mux_out;
  assign config_data_out = config_data[16];
  assign mode = config_data[16];
  assign mux_data = config_data[15:0];
endmodule

(* dynports =  1  *)
(* hdlname = "SB" *)
(* src = "source/SB.sv:3.1-92.10" *)
module \$paramod\SB\WIDTH=s32'00000000000000000000000000001000 (north, east, south, west, clk, en, nrst, config_data_in, config_en, config_data_out);
  (* src = "source/SB.sv:12.15-12.18" *)
  input clk;
  wire clk;
  (* src = "source/SB.sv:13.15-13.29" *)
  input config_data_in;
  wire config_data_in;
  (* src = "source/SB.sv:14.16-14.31" *)
  output config_data_out;
  wire config_data_out;
  (* src = "source/SB.sv:13.31-13.40" *)
  input config_en;
  wire config_en;
  (* src = "source/SB.sv:7.26-7.30" *)
  inout [7:0] east;
  wire [7:0] east;
  (* src = "source/SB.sv:12.20-12.22" *)
  input en;
  wire en;
  (* src = "source/SB.sv:6.26-6.31" *)
  inout [7:0] north;
  wire [7:0] north;
  (* src = "source/SB.sv:12.24-12.28" *)
  input nrst;
  wire nrst;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6600.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6612.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6624.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6636.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6648.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6660.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6672.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:67$6684.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6601.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6613.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6625.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6637.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6649.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6661.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6673.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:68$6685.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6602.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6614.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6626.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6638.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6650.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6662.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6674.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:69$6686.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6603.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6615.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6627.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6639.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6651.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6663.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6675.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:73$6687.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6604.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6616.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6628.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6640.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6652.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6664.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6676.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:74$6688.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6605.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6617.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6629.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6641.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6653.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6665.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6677.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:75$6689.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6606.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6618.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6630.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6642.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6654.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6666.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6678.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:79$6690.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6607.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6619.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6631.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6643.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6655.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6667.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6679.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:80$6691.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6608.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6620.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6632.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6644.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6656.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6668.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6680.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:81$6692.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6609.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6621.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6633.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6645.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6657.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6669.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6681.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:85$6693.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6610.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6622.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6634.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6646.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6658.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6670.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6682.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:86$6694.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6611.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6623.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6635.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6647.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6659.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6671.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6683.turn ;
  (* nosync = 32'd1 *)
  (* src = "source/SB.sv:45.72-45.76" *)
  wire [1:0] \rot_dir$func$source/SB.sv:87$6695.turn ;
  (* src = "source/SB.sv:19.31-19.40" *)
  wire [63:0] route_sel;
  (* src = "source/SB.sv:18.26-18.40" *)
  reg [63:0] route_sel_flat;
  (* src = "source/SB.sv:8.26-8.31" *)
  inout [7:0] south;
  wire [7:0] south;
  (* src = "source/SB.sv:9.26-9.30" *)
  inout [7:0] west;
  wire [7:0] west;
  (* src = "source/SB.sv:40.20-40.28" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] wire_bus;
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[0] <= 1'h1;
    else if (en) route_sel_flat[0] <= config_data_in;
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[1] <= 1'h1;
    else if (en) route_sel_flat[1] <= route_sel_flat[0];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[2] <= 1'h1;
    else if (en) route_sel_flat[2] <= route_sel_flat[1];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[3] <= 1'h1;
    else if (en) route_sel_flat[3] <= route_sel_flat[2];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[4] <= 1'h1;
    else if (en) route_sel_flat[4] <= route_sel_flat[3];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[5] <= 1'h1;
    else if (en) route_sel_flat[5] <= route_sel_flat[4];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[6] <= 1'h1;
    else if (en) route_sel_flat[6] <= route_sel_flat[5];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[7] <= 1'h1;
    else if (en) route_sel_flat[7] <= route_sel_flat[6];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[8] <= 1'h1;
    else if (en) route_sel_flat[8] <= route_sel_flat[7];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[9] <= 1'h1;
    else if (en) route_sel_flat[9] <= route_sel_flat[8];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[10] <= 1'h1;
    else if (en) route_sel_flat[10] <= route_sel_flat[9];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[11] <= 1'h1;
    else if (en) route_sel_flat[11] <= route_sel_flat[10];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[12] <= 1'h1;
    else if (en) route_sel_flat[12] <= route_sel_flat[11];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[13] <= 1'h1;
    else if (en) route_sel_flat[13] <= route_sel_flat[12];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[14] <= 1'h1;
    else if (en) route_sel_flat[14] <= route_sel_flat[13];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[15] <= 1'h1;
    else if (en) route_sel_flat[15] <= route_sel_flat[14];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[16] <= 1'h1;
    else if (en) route_sel_flat[16] <= route_sel_flat[15];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[17] <= 1'h1;
    else if (en) route_sel_flat[17] <= route_sel_flat[16];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[18] <= 1'h1;
    else if (en) route_sel_flat[18] <= route_sel_flat[17];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[19] <= 1'h1;
    else if (en) route_sel_flat[19] <= route_sel_flat[18];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[20] <= 1'h1;
    else if (en) route_sel_flat[20] <= route_sel_flat[19];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[21] <= 1'h1;
    else if (en) route_sel_flat[21] <= route_sel_flat[20];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[22] <= 1'h1;
    else if (en) route_sel_flat[22] <= route_sel_flat[21];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[23] <= 1'h1;
    else if (en) route_sel_flat[23] <= route_sel_flat[22];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[24] <= 1'h1;
    else if (en) route_sel_flat[24] <= route_sel_flat[23];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[25] <= 1'h1;
    else if (en) route_sel_flat[25] <= route_sel_flat[24];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[26] <= 1'h1;
    else if (en) route_sel_flat[26] <= route_sel_flat[25];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[27] <= 1'h1;
    else if (en) route_sel_flat[27] <= route_sel_flat[26];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[28] <= 1'h1;
    else if (en) route_sel_flat[28] <= route_sel_flat[27];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[29] <= 1'h1;
    else if (en) route_sel_flat[29] <= route_sel_flat[28];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[30] <= 1'h1;
    else if (en) route_sel_flat[30] <= route_sel_flat[29];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[31] <= 1'h1;
    else if (en) route_sel_flat[31] <= route_sel_flat[30];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[32] <= 1'h1;
    else if (en) route_sel_flat[32] <= route_sel_flat[31];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[33] <= 1'h1;
    else if (en) route_sel_flat[33] <= route_sel_flat[32];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[34] <= 1'h1;
    else if (en) route_sel_flat[34] <= route_sel_flat[33];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[35] <= 1'h1;
    else if (en) route_sel_flat[35] <= route_sel_flat[34];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[36] <= 1'h1;
    else if (en) route_sel_flat[36] <= route_sel_flat[35];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[37] <= 1'h1;
    else if (en) route_sel_flat[37] <= route_sel_flat[36];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[38] <= 1'h1;
    else if (en) route_sel_flat[38] <= route_sel_flat[37];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[39] <= 1'h1;
    else if (en) route_sel_flat[39] <= route_sel_flat[38];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[40] <= 1'h1;
    else if (en) route_sel_flat[40] <= route_sel_flat[39];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[41] <= 1'h1;
    else if (en) route_sel_flat[41] <= route_sel_flat[40];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[42] <= 1'h1;
    else if (en) route_sel_flat[42] <= route_sel_flat[41];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[43] <= 1'h1;
    else if (en) route_sel_flat[43] <= route_sel_flat[42];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[44] <= 1'h1;
    else if (en) route_sel_flat[44] <= route_sel_flat[43];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[45] <= 1'h1;
    else if (en) route_sel_flat[45] <= route_sel_flat[44];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[46] <= 1'h1;
    else if (en) route_sel_flat[46] <= route_sel_flat[45];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[47] <= 1'h1;
    else if (en) route_sel_flat[47] <= route_sel_flat[46];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[48] <= 1'h1;
    else if (en) route_sel_flat[48] <= route_sel_flat[47];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[49] <= 1'h1;
    else if (en) route_sel_flat[49] <= route_sel_flat[48];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[50] <= 1'h1;
    else if (en) route_sel_flat[50] <= route_sel_flat[49];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[51] <= 1'h1;
    else if (en) route_sel_flat[51] <= route_sel_flat[50];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[52] <= 1'h1;
    else if (en) route_sel_flat[52] <= route_sel_flat[51];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[53] <= 1'h1;
    else if (en) route_sel_flat[53] <= route_sel_flat[52];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[54] <= 1'h1;
    else if (en) route_sel_flat[54] <= route_sel_flat[53];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[55] <= 1'h1;
    else if (en) route_sel_flat[55] <= route_sel_flat[54];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[56] <= 1'h1;
    else if (en) route_sel_flat[56] <= route_sel_flat[55];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[57] <= 1'h1;
    else if (en) route_sel_flat[57] <= route_sel_flat[56];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[58] <= 1'h1;
    else if (en) route_sel_flat[58] <= route_sel_flat[57];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[59] <= 1'h1;
    else if (en) route_sel_flat[59] <= route_sel_flat[58];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[60] <= 1'h1;
    else if (en) route_sel_flat[60] <= route_sel_flat[59];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[61] <= 1'h1;
    else if (en) route_sel_flat[61] <= route_sel_flat[60];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[62] <= 1'h1;
    else if (en) route_sel_flat[62] <= route_sel_flat[61];
  (* \always_ff  = 32'd1 *)
  (* src = "source/SB.sv:23.3-29.6" *)
  always @(posedge clk, negedge nrst)
    if (!nrst) route_sel_flat[63] <= 1'h1;
    else if (en) route_sel_flat[63] <= route_sel_flat[62];
  assign config_data_out = route_sel_flat[63];
  assign north = east;
  assign \rot_dir$func$source/SB.sv:67$6600.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6612.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6624.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6636.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6648.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6660.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6672.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:67$6684.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6601.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6613.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6625.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6637.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6649.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6661.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6673.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:68$6685.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6602.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6614.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6626.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6638.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6650.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6662.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6674.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:69$6686.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6603.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6615.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6627.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6639.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6651.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6663.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6675.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:73$6687.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6604.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6616.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6628.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6640.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6652.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6664.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6676.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:74$6688.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6605.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6617.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6629.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6641.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6653.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6665.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6677.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:75$6689.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6606.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6618.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6630.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6642.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6654.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6666.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6678.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:79$6690.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6607.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6619.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6631.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6643.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6655.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6667.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6679.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:80$6691.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6608.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6620.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6632.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6644.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6656.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6668.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6680.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:81$6692.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6609.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6621.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6633.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6645.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6657.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6669.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6681.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:85$6693.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6610.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6622.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6634.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6646.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6658.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6670.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6682.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:86$6694.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6611.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6623.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6635.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6647.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6659.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6671.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6683.turn  = 2'hx;
  assign \rot_dir$func$source/SB.sv:87$6695.turn  = 2'hx;
  assign route_sel = route_sel_flat;
  assign south = east;
  assign west = east;
  assign wire_bus = east;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "source/fpgacell.sv:2.1-83.10" *)
module fpgacell(clk, en, nrst, config_data_in, config_en, config_data_out, le_clk, le_en, le_nrst, CBnorth, LEoutnorth, LEinnorth, SBsouth, CBoutsouth, CBinsouth, CBeast, LEouteast, LEineast, SBwest, CBoutwest, CBinwest
);
  (* src = "source/fpgacell.sv:28.32-28.38" *)
  inout [7:0] CBeast;
  wire [7:0] CBeast;
  (* src = "source/fpgacell.sv:25.34-25.43" *)
  input CBinsouth;
  wire CBinsouth;
  (* src = "source/fpgacell.sv:35.34-35.42" *)
  input CBinwest;
  wire CBinwest;
  (* src = "source/fpgacell.sv:18.32-18.39" *)
  inout [7:0] CBnorth;
  wire [7:0] CBnorth;
  (* src = "source/fpgacell.sv:24.34-24.44" *)
  output [3:0] CBoutsouth;
  wire [3:0] CBoutsouth;
  (* src = "source/fpgacell.sv:34.34-34.43" *)
  output [3:0] CBoutwest;
  wire [3:0] CBoutwest;
  (* src = "source/fpgacell.sv:30.33-30.41" *)
  input [3:0] LEineast;
  wire [3:0] LEineast;
  (* src = "source/fpgacell.sv:20.33-20.42" *)
  input [3:0] LEinnorth;
  wire [3:0] LEinnorth;
  (* src = "source/fpgacell.sv:29.35-29.44" *)
  output LEouteast;
  wire LEouteast;
  (* src = "source/fpgacell.sv:19.35-19.45" *)
  output LEoutnorth;
  wire LEoutnorth;
  (* src = "source/fpgacell.sv:23.32-23.39" *)
  inout [7:0] SBsouth;
  wire [7:0] SBsouth;
  (* src = "source/fpgacell.sv:33.32-33.38" *)
  inout [7:0] SBwest;
  wire [7:0] SBwest;
  (* src = "source/fpgacell.sv:38.26-38.35" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] bus_south;
  (* src = "source/fpgacell.sv:38.37-38.45" *)
  (* unused_bits = "0 1 2 3 4 5 6 7" *)
  wire [7:0] bus_west;
  (* src = "source/fpgacell.sv:42.22-42.35" *)
  wire cb0A_cram_out;
  (* src = "source/fpgacell.sv:42.37-42.50" *)
  wire cb0B_cram_out;
  (* src = "source/fpgacell.sv:43.3-43.16" *)
  wire cb1A_cram_out;
  (* src = "source/fpgacell.sv:43.18-43.31" *)
  wire cb1B_cram_out;
  (* src = "source/fpgacell.sv:10.15-10.18" *)
  input clk;
  wire clk;
  (* src = "source/fpgacell.sv:11.15-11.29" *)
  input config_data_in;
  wire config_data_in;
  (* src = "source/fpgacell.sv:12.16-12.31" *)
  output config_data_out;
  wire config_data_out;
  (* src = "source/fpgacell.sv:11.31-11.40" *)
  input config_en;
  wire config_en;
  (* src = "source/fpgacell.sv:10.20-10.22" *)
  input en;
  wire en;
  (* src = "source/fpgacell.sv:15.15-15.21" *)
  input le_clk;
  wire le_clk;
  (* src = "source/fpgacell.sv:42.9-42.20" *)
  wire le_cram_out;
  (* src = "source/fpgacell.sv:15.23-15.28" *)
  input le_en;
  wire le_en;
  (* src = "source/fpgacell.sv:15.30-15.37" *)
  input le_nrst;
  wire le_nrst;
  (* src = "source/fpgacell.sv:40.27-40.31" *)
  wire [3:0] lein;
  (* src = "source/fpgacell.sv:39.28-39.33" *)
  wire leout;
  (* src = "source/fpgacell.sv:10.24-10.28" *)
  input nrst;
  wire nrst;
  (* src = "source/fpgacell.sv:43.33-43.44" *)
  wire sb_cram_out;
  (* src = "source/fpgacell.sv:56.42-63.63" *)
  \$paramod$11da903c679ddc23dc10e745519a255ce657bf38\CB  CB_northwest (
    .clk(clk),
    .config_data_inA(le_cram_out),
    .config_data_inB(cb0A_cram_out),
    .config_data_outA(cb0A_cram_out),
    .config_data_outB(cb0B_cram_out),
    .config_en(config_en),
    .en(en),
    .le_inA(lein),
    .le_inB(CBoutwest),
    .le_outA(leout),
    .le_outB(CBinwest),
    .nrst(nrst),
    .sb_busA(bus_west),
    .sb_busB(CBnorth)
  );
  (* src = "source/fpgacell.sv:65.42-72.64" *)
  \$paramod$11da903c679ddc23dc10e745519a255ce657bf38\CB  CB_southeast (
    .clk(clk),
    .config_data_inA(cb0B_cram_out),
    .config_data_inB(cb1A_cram_out),
    .config_data_outA(cb1A_cram_out),
    .config_data_outB(cb1B_cram_out),
    .config_en(config_en),
    .en(en),
    .le_inB(CBoutsouth),
    .le_outA(leout),
    .le_outB(CBinsouth),
    .nrst(nrst),
    .sb_busA(bus_south),
    .sb_busB(CBeast)
  );
  (* src = "source/fpgacell.sv:48.42-54.35" *)
  \$paramod\LE\LUT_SIZE=s32'00000000000000000000000000010000  LE_northeast (
    .clk(clk),
    .config_data_in(config_data_in),
    .config_data_out(le_cram_out),
    .config_en(config_en),
    .en(en),
    .le_clk(le_clk),
    .le_en(le_en),
    .le_nrst(le_nrst),
    .le_out(leout),
    .nrst(nrst),
    .select(lein)
  );
  (* src = "source/fpgacell.sv:74.42-79.72" *)
  \$paramod\SB\WIDTH=s32'00000000000000000000000000001000  SB_southwest (
    .clk(clk),
    .config_data_in(cb1B_cram_out),
    .config_data_out(sb_cram_out),
    .config_en(config_en),
    .east(bus_south),
    .en(en),
    .north(bus_west),
    .nrst(nrst),
    .south(SBsouth),
    .west(SBwest)
  );
  assign LEouteast = leout;
  assign LEoutnorth = leout;
  assign config_data_out = sb_cram_out;
endmodule
